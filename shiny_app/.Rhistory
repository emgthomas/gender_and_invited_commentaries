outputs_select$totals <- blah
sum(outputs_select$n_cases <= outputs_select$totals)
View(outputs_select[,c("journal","n_cases","totals")])
outputs_select <- readRDS("./shiny_app/journal_ORs.rds")
setwd("../identifiable data apr2019/")
# --------------------------------------------------------------- #
# --------------------- De-identifying data --------------------- #
# --------------------------------------------------------------- #
require(tm)
setwd("/Users/emt380/Documents/PhD_Papers/Gender_bias/R_code/gender_bias_invited_commentary/identifiable data apr2019/")
# Authors
authors <- read.csv(file="Author_Gender_Match_Details.csv")
# Country of origin
country <- read.csv(file="Included_Authors_Origin_Country.csv")
# Publications
publications <- read.csv(file="Intra_Source_Citing_Master_Set.csv")
# How many articles?
length(unique(publications$citing))
# How many BMJ articles?
length(unique(publications$citing[publications$pub_sourceid==51748]))
# Additional ICCs identified when NULL issue numbers were set to zero (these were excluded from analysis)
publications_miss <- read.csv(file="Intra_Source_Citing_Med_Journals_MISSING_ISSUE_NUMBER.csv")
publications_miss <- publications_miss[!duplicated(publications_miss$citing),]
# How many articles?
length(unique(publications_miss$pub_sourceid))
# How many articles per journal?
View(table(publications_miss$pub_source_title))
length(intersect(unique(publications_miss$pub_sourceid),unique(publications$pub_sourceid)))
# How many BMJ articles?
sum(publications_miss$pub_sourceid==51748)
# Identify articles which arereplies/responses to commentaries/letters
keys <- c("\\breply\\b",
"\\breplies\\b",
"\\bresponse\\b",
"\\bresponses\\b",
"\\brespond\\b",
"\\bresponds\\b")
which_replies <- list()
all_replies <- numeric()
pubs_dedup <- publications[!duplicated(publications$citing),]
pub_titles <- removePunctuation(as.character(pubs_dedup$pub_title))
for(i in 1:length(keys)){
which_replies[[i]] <- grep(keys[i],pub_titles,ignore.case=T)
all_replies <- union(all_replies,which_replies[[i]])
}
# View(pub_titles[all_replies])
# View(pubs_dedup$pub_title[which_replies[[1]]])
# View(pubs_dedup[all_replies,])
write.csv(pubs_dedup[all_replies,c("pub_title","pub_source_title")],file = "replies.csv",row.names = F)
# length(unique(pubs_dedup$citing[all_replies]))/length(unique(pubs_dedup$citing))
publications$replies <- FALSE
publications$replies[publications$citing %in% unique(pubs_dedup$citing[all_replies])] <- TRUE
# Create master list of IDs for authors
AuthorIDs <- unique(authors$AuthorID)
set.seed(3463457)
auth_id <- data.frame(AuthorID=sample(AuthorIDs),auth_id=1:length(AuthorIDs))
# Create master lists of IDs for publications
PubIDs <- unique(publications$citing)
set.seed(9728778)
pub_id <- data.frame(PubID=sample(PubIDs),pub_id=1:length(PubIDs))
# Save master lists
saveRDS(auth_id,file="author_ids.rds")
saveRDS(auth_id,file="publication_ids.rds")
# Merge these into data frames
authors2 <- merge(authors,auth_id,by="AuthorID")
authors3 <- merge(authors2,pub_id,by.x="Publication",by.y="PubID",all.x=T,all.y=F)
authors3$case <- as.numeric(authors3$Designation == "Case")
publications2 <- merge(publications,pub_id,by.x="citing",by.y="PubID")
country2 <- merge(country,auth_id,by="AuthorID",all.x=T,all.y=F)
# Keep only necessary variables
authors4 <- authors3[,c("pub_id","auth_id","case","Match_Score","Gender","H_Index","First_Year_in_Scopus","Total_Publications_In_Scopus")]
publications3 <- publications2[,c("pub_id","pub_sourceid","pub_source_title","citescore","replies","publication_year")]
country3 <- country2[,c("auth_id","country","Publications")]
# Remove duplicates in publications 3 (these appear due to multiple ASJC codes per journal)
publications4 <- publications3[!duplicated(publications3),]
# We need to get rid of some journals that do not have correct ASJC codes...
# Read in journal topics
journal_topics <- read.csv(file="./All_Journals_ASJC.csv")
# Keep only medical or multidisciplinary topics (some journals have extra ASJC codes outside our range of interest)
journal_topics <- journal_topics[(journal_topics$AJSC_Codes < 2800 & journal_topics$AJSC_Codes >= 2700) |
journal_topics$AJSC_Codes==1000,]
journal_names <- journal_topics[!duplicated(journal_topics$pub_sourceid),c("pub_sourceid","sourcetitle")]
topic_names <- read.csv(file="./ASJC Codes with levels.csv",
sep=";") # cloned from github.com/plreyes/Scopus.git
journal_topics <- merge(x=journal_topics,y=topic_names,
by.x="AJSC_Codes",by.y="Code",
all.x=T)
# Which topics are medical, which are multidisciplinary?
journal_type <- journal_topics
journal_type$medical <- (journal_topics$AJSC_Codes < 2800 & journal_topics$AJSC_Codes >= 2700)
journal_type$multidisciplinary <- journal_topics$AJSC_Codes == 1000
journal_type$pub_sourcetype <- ""
journal_type$pub_sourcetype[journal_type$medical] <- "Medical (27XX)"
journal_type$pub_sourcetype[journal_type$multidisciplinary] <- "Multidisciplinary (1000)"
journal_type <- journal_type[,c("pub_sourceid","pub_sourcetype")]
journal_type <- journal_type[!duplicated(journal_type),]
# Merge journal types (medical or multidisciplinary) into publications list
publications5 <- merge(publications4,journal_type[,c("pub_sourceid","pub_sourcetype")],by="pub_sourceid",all.x = T,all.y=T)
# Remove articles without relevant ASJC codes
publications6 <- publications5[!is.na(publications5$pub_sourcetype),]
pubs <- unique(publications5$pub_id)
remove_pubs <- pubs[!(pubs %in% unique(publications6$pub_id))]
authors5 <- authors4[!(authors4$pub_id %in% remove_pubs),]
#### Get asian origin variable ####
country3$country <- as.character(country3$country)
# UNSD country codes, downloaded April 23, 2019 from https://unstats.un.org/unsd/methodology/m49/overview/
country_codes <- read.csv("UNSD_country_codes.csv")
# change three letter country code to lower case
country_codes$country <- tolower(country_codes$ISO.alpha3.Code)
country_codes <- country_codes[country_codes$country != "",c("country","Region.Name")]
# Merge in
country4 <- merge(country3,country_codes,by="country",all.x=T,all.y=F)
# Do some manually
asian_countries_missed <- c("hkg","twn") # Hong Kong, Taiwan
country4$Region.Name[country4$country %in% asian_countries_missed] <- "Asia"
country4$Asia <- country4$Region.Name == "Asia"
# Which authors published in an Asian country at least once in their first year?
authors_asian <- tapply(country4$Asia,as.character(country4$auth_id),sum,na.rm=T)
authors_asian <- data.frame(auth_id=names(authors_asian),asia=as.integer(authors_asian>=1))
# remove year variable from publications, for identifiability reasons
publications7 <- publications6
publications7$publication_year <- NULL
# Merge author gender into publications dataset, exclude articles with missing corresponding author gender, and save this for use in online interactive plot
cases <- authors5[authors5$case==1,]
names(cases)
publications8 <- merge(x=publications6,y=cases[,c("pub_id","Gender","H_Index","Total_Publications_In_Scopus","First_Year_in_Scopus")],by="pub_id",all.x=T,all.y=F,sort=F)
dim(publications8)
publications8 <- publications8[!(publications8$Gender=="unknown"),]
pub_counts <- as.data.frame(table(publications8$pub_sourceid,publications8$publication_year))
names(pub_counts) <- c("pub_sourceid","year","freq")
dim(pub_counts)
# do the same but also excluding articles with missing h-index/number of pubs/years active
publications8 <- subset(publications8,is.na(H_Index) | is.na(Total_Publications_in_Scopus) | is.na(First_Year_in_Scopus))
names(publications8)
# do the same but also excluding articles with missing h-index/number of pubs/years active
publications8 <- subset(publications8,is.na(H_Index) | is.na(Total_Publications_In_Scopus) | is.na(First_Year_in_Scopus))
dim(publications8)
publications8 <- merge(x=publications6,y=cases[,c("pub_id","Gender","H_Index","Total_Publications_In_Scopus","First_Year_in_Scopus")],by="pub_id",all.x=T,all.y=F,sort=F)
publications8 <- publications8[!(publications8$Gender=="unknown"),]
dim(publications8)
table(publications8$H_Index)
table(publications8$H_Index,na.action = "all")
?table
table(publications8$H_Index,useNA="always")
# Merge author gender into publications dataset, exclude articles with missing corresponding author gender, and save this for use in online interactive plot
cases <- authors5[authors5$case==1,]
publications8 <- merge(x=publications6,y=cases[,c("pub_id","Gender","H_Index","Total_Publications_In_Scopus","First_Year_in_Scopus")],by="pub_id",all.x=T,all.y=F,sort=F)
dim(publications8)
publications8 <- publications8[!(publications8$Gender=="unknown"),]
dim(publications8)
head(publications8$H_Index)
sum(is.na(publications8$H_Index))
sum(is.na(cases$H_Index))
table(cases$H_Index,use.na="always")
table(cases$H_Index,useNA ="always")
publications8 <- merge(x=publications6,y=cases[,c("pub_id","Gender","H_Index","Total_Publications_In_Scopus","First_Year_in_Scopus")],by="pub_id",all.x=T,all.y=F,sort=F)
sum(is.na(publications8$H_Index))
length(intersect(publications6$pub_id,cases$pub_id))
dim(publications8)
publications8 <- merge(x=publications6,
y=cases[,c("pub_id","Gender","H_Index","Total_Publications_In_Scopus","First_Year_in_Scopus")],
by="pub_id",all.x=T,all.y=F,sort=F)
dim(publications8)
publications8 <- publications8[!(publications8$Gender=="unknown"),]
dim(publications8)
sum(is.na(publications8$H_Index))
publications8 <- publications6
publications8 <- publications6[publications6$pub_id %in% cases$pub_id,]
dim(publications8)
publications8 <- merge(x=publications8,
y=cases[,c("pub_id","Gender","H_Index","Total_Publications_In_Scopus","First_Year_in_Scopus")],
by="pub_id",all.x=T,all.y=F,sort=F)
dim(publications8)
publications8 <- publications8[!(publications8$Gender=="unknown"),]
dim(publications8)
sum(is.na(publications8$H_Index))
sum(is.na(publications8$First_Year_in_Scopus))
sum(is.na(publications8$H_Index))
# Merge author gender into publications dataset, exclude articles with missing corresponding author gender, and save this for use in online interactive plot
cases <- authors5[authors5$case==1,]
publications8 <- publications6[publications6$pub_id %in% cases$pub_id,]
publications8 <- merge(x=publications8,
y=cases[,c("pub_id","Gender")],
by="pub_id",all.x=T,all.y=F,sort=F)
publications8 <- publications8[!(publications8$Gender=="unknown"),]
pub_counts <- as.data.frame(table(publications8$pub_sourceid,publications8$publication_year))
names(pub_counts) <- c("pub_sourceid","year","npubs")
saveRDS(pub_counts,file="/Users/emt380/Documents/PhD_Papers/Gender_bias/R_code/gender_bias_invited_commentary/github/data/pub_counts_known_gender_by_year_and_journal.rds")
setwd("../github/code/")
setwd("../")
getwd()
outputs_select <- readRDS("./shiny_app/journal_ORs.rds")
names(outputs_select)
outputs_select$freq.2013 <- NULL
outputs_select$freq.2014 <- NULL
outputs_select$freq.2015 <- NULL
outputs_select$freq.2016 <- NULL
outputs_select$freq.2017 <- NULL
names(outputs_select)
# add yearly ICC counts for these journals
pub_counts <- readRDS("data/pub_counts_known_gender_by_year_and_journal.rds")
pub_counts <- subset(pub_counts,pub_sourceid %in% outputs_select$journal)
pub_counts <- reshape(pub_counts,direction="wide",timevar="year",idvar="pub_sourceid")
dim(outputs_select)
outputs_select <- merge(outputs_select,pub_counts,by.x="journal",by.y="pub_sourceid")
dim(outputs_select)
names(outputs_select)
# save results for use in plotting and random effects meta-analysis
saveRDS(outputs_select, "./shiny_app/journal_ORs.rds")
setwd("/Users/emt380/Documents/PhD_Papers/Gender_bias/R_code/gender_bias_invited_commentary/github/shiny_app")
rm(list=ls())
# setwd("/Users/emt380/Documents/PhD_Papers/Gender_bias/R_code/gender_bias_invited_commentary/github/shiny_app")
df <- readRDS( "journal_ORs.rds")
topics_list <- readRDS("topics_list.rds")
names(df)
shiny::runApp()
runApp()
df <- readRDS( "journal_ORs.rds")
out <- df
input <- list(adjusted="No",n_min=0)
# Adjust for author seniority?
if(input$adjusted=="No"){
out$OR_plot <- out$OR
out$n_cases_plot <- out$n_cases
out$pval_plot <- out$pval
out$ci_lower_plot <- out$ci_lower
out$ci_upper_plot <- out$ci_upper
out$node_size_plot <- out$node_size
out$effect_plot <- out$effect
out$sd_plot <- out$sd
} else {
out$OR_plot <- out$OR_adj
out$n_cases_plot <- out$n_cases_adj
out$pval_plot <- out$pval_adj
out$ci_lower_plot <- out$ci_lower_adj
out$ci_upper_plot <- out$ci_upper_adj
out$node_size_plot <- out$node_size_adj
out$effect_plot <- out$effect_adj
out$sd_plot <- out$sd_adj
}
out$hovertext <- paste("<i>",out$sourcetitle,"</i>",
'<br>OR: ',sprintf(out$OR_plot, fmt="%.2f"),
' (',sprintf(out$ci_lower_plot, fmt="%.2f"),
',',sprintf(out$ci_upper_plot, fmt="%.2f"),')',
'<br>Cite Score: ', sprintf(out$citescore, fmt="%.2f"),
"<br>Number of cases (ICC authors): ", out$n_cases_plot,
"<br><table><tr><th>Year</th><td>2013</td><td>2014</td><td>2015</td><td>2016</td><td>2017</td></tr>",
"<tr><th>ICCs</th><td>",out$npubs.2013,"</td><td>",
out$npubs.2014,"</td><td>",
out$npubs.2015,"</td><td>",
out$npubs.2016,"</td><td>",
out$npubs.2017,"</td></tr></table>",
sep="")
out$hovertext[1]
runApp()
runApp()
getwd()
setwd("../")
outputs_select <- readRDS("./shiny_app/journal_ORs.rds")
dim(outputs_select)
names(outputs_select)
topics_list
# save table of journal-specific results
outputs_select$topic_list <- apply(outputs_select,1,function(x,topics_list) topics_list[x[,topics_list]==1])
# save table of journal-specific results
outputs_select$topic_list <- apply(outputs_select,1,function(x,topics_list) topics_list[x[,topics_list]==1],
topics_list=topics_list)
# save table of journal-specific results
outputs_select$topic_list <- apply(outputs_select[,topics_list],1,function(x,topics_list) topics_list[x==1],
topics_list=topics_list)
outputs_select$topic_list
outputs_select$topic_list <- NULL
# save table of journal-specific results
outputs_select$topic_list <- apply(outputs_select[,topics_list],1,
function(x,topics_list) paste(topics_list[x==1],collapse=", ",sep=""),
topics_list=topics_list)
outputs_select$topic_list
# save table of journal-specific results
outputs_select$topic_list <- apply(outputs_select[,topics_list],1,
function(x,topics_list) paste(topics_list[x==1],collapse="; ",sep=""),
topics_list=topics_list)
outputs_select$topic_list
names(outputs_select)
outputs_select <- outputs_select[,-topics_list]
outputs_select[,topics_list] <- NULL
names(outputs_select)
outputs_select$OR
outputs_select$OR <- sprintf(outputs_select$OR, fmt="%.2f")
outputs_select$OR
names(outputs_select)
outputs_select[,c("effect","sd","effect_adj","sd_adj","included","node_size","node_size_adj")] <- NULL
names(outputs_select)
outputs_select[,c("effect","sd","effect_adj","sd_adj","included","node_size","node_size_adj","effect_main",
"n_cases_int","sd_main","effect_int","sd_int")] <- NULL
outputs_select
names(outputs_select)
outputs_select$pval <- sprintf(outputs_select$pval, fmt="%.3f")
outputs_select$pval
names(outputs_select)
# write unadjusted results to csv
write.csv(outputs_select[,c("journal","sourcetitle","citescore",
"n_cases","OR","ci_lower","ci_upper","pval",
"n_cases_adj","OR","ci_lower","ci_upper","pval_adj",
"npubs.2013","npubs.2014","npubs.2015","npubs.2016","npubs.2017")],
file="./results/metadata_interactive_figure.csv")
outputs_select <- outputs_select[sort(outputs_select$sourcetitle),]
# write unadjusted results to csv
write.csv(outputs_select[,c("journal","sourcetitle","citescore",
"n_cases","OR","ci_lower","ci_upper","pval",
"n_cases_adj","OR","ci_lower","ci_upper","pval_adj",
"npubs.2013","npubs.2014","npubs.2015","npubs.2016","npubs.2017")],
file="./results/metadata_interactive_figure.csv",
row.names = F)
order(outputs_select$sourcetitle)
outputs_select <- outputs_select[order(outputs_select$sourcetitle),]
outputs_select$sourcetitle
outputs_select <- readRDS("./shiny_app/journal_ORs.rds")
# save table of journal-specific results
outputs_select$topic_list <- apply(outputs_select[,topics_list],1,
function(x,topics_list) paste(topics_list[x==1],collapse="; ",sep=""),
topics_list=topics_list)
outputs_select[,topics_list] <- NULL
outputs_select[,c("effect","sd","effect_adj","sd_adj","included","node_size","node_size_adj","effect_main",
"n_cases_int","sd_main","effect_int","sd_int")] <- NULL
outputs_select <- readRDS("./shiny_app/journal_ORs.rds")
# save table of journal-specific results
outputs_select$topics_list <- apply(outputs_select[,topics_list],1,
function(x,topics_list) paste(topics_list[x==1],collapse="; ",sep=""),
topics_list=topics_list)
outputs_select[,topics_list] <- NULL
outputs_select[,c("effect","sd","effect_adj","sd_adj","included","node_size","node_size_adj","effect_main",
"n_cases_int","sd_main","effect_int","sd_int")] <- NULL
outputs_select$OR <- sprintf(outputs_select$OR, fmt="%.2f")
outputs_select$ci_lower <- sprintf(outputs_select$ci_lower, fmt="%.2f")
outputs_select$ci_upper <- sprintf(outputs_select$ci_upper, fmt="%.2f")
outputs_select$pval <- sprintf(outputs_select$pval, fmt="%.3f")
outputs_select$OR_adj <- sprintf(outputs_select$OR_adj, fmt="%.2f")
outputs_select$ci_lower_adj <- sprintf(outputs_select$ci_lower_adj, fmt="%.2f")
outputs_select$ci_upper_adj <- sprintf(outputs_select$ci_upper_adj, fmt="%.2f")
outputs_select$pval_adj <- sprintf(outputs_select$pval, fmt="%.3f")
outputs_select <- outputs_select[order(outputs_select$sourcetitle),]
outputs_select <- readRDS("./shiny_app/journal_ORs.rds")
# save table of journal-specific results
outputs_select$topics_list <- apply(outputs_select[,topics_list],1,
function(x,topics_list) paste(topics_list[x==1],collapse="; ",sep=""),
topics_list=topics_list)
outputs_select[,topics_list] <- NULL
outputs_select[,c("effect","sd","effect_adj","sd_adj","included","node_size","node_size_adj","effect_main",
"n_cases_int","sd_main","effect_int","sd_int")] <- NULL
outputs_select$OR <- sprintf(outputs_select$OR, fmt="%.2f")
outputs_select$ci_lower <- sprintf(outputs_select$ci_lower, fmt="%.2f")
outputs_select$ci_upper <- sprintf(outputs_select$ci_upper, fmt="%.2f")
outputs_select$pval <- sprintf(outputs_select$pval, fmt="%.3f")
outputs_select$OR_adj <- sprintf(outputs_select$OR_adj, fmt="%.2f")
outputs_select$ci_lower_adj <- sprintf(outputs_select$ci_lower_adj, fmt="%.2f")
outputs_select$ci_upper_adj <- sprintf(outputs_select$ci_upper_adj, fmt="%.2f")
outputs_select$pval_adj <- sprintf(outputs_select$pval, fmt="%.3f")
outputs_select$pval_adj
class(outputs_select$pval_adj)
?sprintf
outputs_select$pval_adj <- sprintf(outputs_select$pval, fmt="%.3f")
class(outputs_select$pval_adj)
sum(is.na(outputs_select$pval_adj))
sum(is.na(outputs_select$pval))
outputs_select$pval_adj <- sprintf(outputs_select$pval_adj, fmt="%.3f")
order(outputs_select$sourcetitle)
length(order(outputs_select$sourcetitle))
sum(outputs_select$sourcetitle=="")
sort(outputs_select$sourcetitle)
outputs_select$sourcetitle[order(outputs_select$sourcetitle)]
outputs_select <- outputs_select[order(outputs_select$sourcetitle),]
outputs_select$sourcetitle
# write unadjusted results to csv
write.csv(outputs_select[,c("journal","sourcetitle","citescore",
"n_cases","OR","ci_lower","ci_upper","pval",
"n_cases_adj","OR","ci_lower","ci_upper","pval_adj",
"npubs.2013","npubs.2014","npubs.2015","npubs.2016","npubs.2017","topics_list")],
file="./results/metadata_interactive_figure.csv",
row.names = F)
outputs_select <- outputs_select[,c("journal","sourcetitle","citescore",
"n_cases","OR","ci_lower","ci_upper","pval",
"n_cases_adj","OR","ci_lower","ci_upper","pval_adj",
"npubs.2013","npubs.2014","npubs.2015","npubs.2016","npubs.2017","topics_list")]
dim(outputs_select)
length(c("Journal ID","Journal Title","Cite Score",
"Number of Unique ICC Authors (Cases)",
"Unadjusted Odds Ratio","Unadjusted CI Lower Bound","Unadjusted CI Upper Bound","Unadjusted P-Value",
"Number of Unique ICC Authors (Cases) with Complete Covariate Data",
"Adjusted Odds Ratio","Adjusted CI Lower Bound","Adjusted CI Upper Bound","Adjusted P-Value",
"Number of ICCs (2013)","Number of ICCs (2014)","Number of ICCs (2015)","Number of ICCs (2016)","Number of ICCs (2017)"))
names(outputs_select) <- c("Journal ID","Journal Title","Cite Score",
"Number of Unique ICC Authors (Cases)",
"Unadjusted Odds Ratio","Unadjusted CI Lower Bound","Unadjusted CI Upper Bound","Unadjusted P-Value",
"Number of Unique ICC Authors (Cases) with Complete Covariate Data",
"Adjusted Odds Ratio","Adjusted CI Lower Bound","Adjusted CI Upper Bound","Adjusted P-Value",
"Number of ICCs (2013)","Number of ICCs (2014)","Number of ICCs (2015)","Number of ICCs (2016)","Number of ICCs (2017)",
"Journal Topics (from ASJC codes)")
# write unadjusted results to csv
write.csv(outputs_select,
file="./results/metadata_interactive_figure.csv",
row.names = F)
outputs_select <- readRDS("./shiny_app/journal_ORs.rds")
# save table of journal-specific results
outputs_select$topics_list <- apply(outputs_select[,topics_list],1,
function(x,topics_list) paste(topics_list[x==1],collapse="; ",sep=""),
topics_list=topics_list)
outputs_select[,topics_list] <- NULL
outputs_select[,c("effect","sd","effect_adj","sd_adj","included","node_size","node_size_adj","effect_main",
"n_cases_int","sd_main","effect_int","sd_int")] <- NULL
outputs_select$OR <- sprintf(outputs_select$OR, fmt="%.2f")
outputs_select$ci_lower <- sprintf(outputs_select$ci_lower, fmt="%.2f")
outputs_select$ci_upper <- sprintf(outputs_select$ci_upper, fmt="%.2f")
outputs_select$pval <- sprintf(outputs_select$pval, fmt="%.3f")
outputs_select$OR_adj <- sprintf(outputs_select$OR_adj, fmt="%.2f")
outputs_select$ci_lower_adj <- sprintf(outputs_select$ci_lower_adj, fmt="%.2f")
outputs_select$ci_upper_adj <- sprintf(outputs_select$ci_upper_adj, fmt="%.2f")
outputs_select$pval_adj <- sprintf(outputs_select$pval_adj, fmt="%.3f")
outputs_select <- outputs_select[order(outputs_select$sourcetitle),]
outputs_select$journal <- as.character(outputs_select$journal)
outputs_select$journal
outputs_select <- readRDS("./shiny_app/journal_ORs.rds")
# save table of journal-specific results
outputs_select$topics_list <- apply(outputs_select[,topics_list],1,
function(x,topics_list) paste(topics_list[x==1],collapse="; ",sep=""),
topics_list=topics_list)
outputs_select[,topics_list] <- NULL
outputs_select[,c("effect","sd","effect_adj","sd_adj","included","node_size","node_size_adj","effect_main",
"n_cases_int","sd_main","effect_int","sd_int")] <- NULL
outputs_select$OR <- sprintf(outputs_select$OR, fmt="%.2f")
outputs_select$ci_lower <- sprintf(outputs_select$ci_lower, fmt="%.2f")
outputs_select$ci_upper <- sprintf(outputs_select$ci_upper, fmt="%.2f")
outputs_select$pval <- sprintf(outputs_select$pval, fmt="%.3f")
outputs_select$OR_adj <- sprintf(outputs_select$OR_adj, fmt="%.2f")
outputs_select$ci_lower_adj <- sprintf(outputs_select$ci_lower_adj, fmt="%.2f")
outputs_select$ci_upper_adj <- sprintf(outputs_select$ci_upper_adj, fmt="%.2f")
outputs_select$pval_adj <- sprintf(outputs_select$pval_adj, fmt="%.3f")
outputs_select <- outputs_select[order(outputs_select$sourcetitle),]
outputs_select$journal <- as.character(outputs_select$journal)
outputs_select <- outputs_select[,c("journal","sourcetitle","citescore",
"n_cases",
"OR","ci_lower","ci_upper","pval",
"n_cases_adj",
"OR","ci_lower","ci_upper","pval_adj",
"npubs.2013","npubs.2014","npubs.2015","npubs.2016","npubs.2017","topics_list")]
names(outputs_select) <- c("Scopus Source Identifier","Journal","2016 Cite Score",
"Number of Unique ICC Authors (Cases)",
"Unadjusted Odds Ratio","Unadjusted CI Lower Bound","Unadjusted CI Upper Bound","Unadjusted P-Value",
"Number of Unique ICC Authors (Cases) with Complete Covariate Data",
"Adjusted Odds Ratio","Adjusted CI Lower Bound","Adjusted CI Upper Bound","Adjusted P-Value",
"Number of ICCs (2013)","Number of ICCs (2014)","Number of ICCs (2015)","Number of ICCs (2016)","Number of ICCs (2017)",
"Journal Topics (from ASJC codes)")
# write unadjusted results to csv
write.csv(outputs_select,
file="./results/metadata_interactive_figure.csv",
row.names = F)
outputs_select <- readRDS("./shiny_app/journal_ORs.rds")
# save table of journal-specific results
outputs_select$topics_list <- apply(outputs_select[,topics_list],1,
function(x,topics_list) paste(topics_list[x==1],collapse="; ",sep=""),
topics_list=topics_list)
outputs_select[,topics_list] <- NULL
outputs_select[,c("effect","sd","effect_adj","sd_adj","included","node_size","node_size_adj","effect_main",
"n_cases_int","sd_main","effect_int","sd_int")] <- NULL
outputs_select$OR <- sprintf(outputs_select$OR, fmt="%.2f")
outputs_select$ci_lower <- sprintf(outputs_select$ci_lower, fmt="%.2f")
outputs_select$ci_upper <- sprintf(outputs_select$ci_upper, fmt="%.2f")
outputs_select$pval <- sprintf(outputs_select$pval, fmt="%.3f")
outputs_select$OR_adj <- sprintf(outputs_select$OR_adj, fmt="%.2f")
outputs_select$ci_lower_adj <- sprintf(outputs_select$ci_lower_adj, fmt="%.2f")
outputs_select$ci_upper_adj <- sprintf(outputs_select$ci_upper_adj, fmt="%.2f")
outputs_select$pval_adj <- sprintf(outputs_select$pval_adj, fmt="%.3f")
outputs_select <- outputs_select[order(outputs_select$sourcetitle),]
outputs_select$journal <- as.character(outputs_select$journal)
outputs_select <- outputs_select[,c("journal","sourcetitle","citescore",
"n_cases",
"OR","ci_lower","ci_upper","pval",
"n_cases_adj",
"OR","ci_lower","ci_upper","pval_adj",
"npubs.2013","npubs.2014","npubs.2015","npubs.2016","npubs.2017","topics_list")]
names(outputs_select) <- c("Scopus Source Identifier","Journal","2016 Cite Score",
"Number of Unique ICC Authors (Cases)",
"Unadjusted Odds Ratio","Unadjusted CI Lower Bound","Unadjusted CI Upper Bound","Unadjusted P-Value",
"Number of Cases Included in Adjusted Analysis",
"Adjusted Odds Ratio","Adjusted CI Lower Bound","Adjusted CI Upper Bound","Adjusted P-Value",
"Number of ICCs (2013)","Number of ICCs (2014)","Number of ICCs (2015)","Number of ICCs (2016)","Number of ICCs (2017)",
"Journal Topics (from ASJC codes)")
# write unadjusted results to csv
write.csv(outputs_select,
file="./results/metadata_interactive_figure.csv",
row.names = F)
names(outputs_select) <- c("Scopus Source Identifier","Journal","2016 Cite Score",
"Number of Unique ICC Authors (Cases)",
"Odds Ratio (Model 1)","95% CI Lower Bound (Model 1)","95% CI Upper Bound (Model 1)","P-Value (Model 1)",
"Number of Cases (Model 1)",
"Odds Ratio (Model 2)","95% CI Lower Bound (Model 2)","95% CI Upper Bound (Model 2)","P-Value (Model 2)",
"Number of ICCs (2013)","Number of ICCs (2014)","Number of ICCs (2015)","Number of ICCs (2016)","Number of ICCs (2017)",
"Journal Topics (from ASJC codes)")
# write unadjusted results to csv
write.csv(outputs_select,
file="./results/eTable6.csv",
row.names = F)
setwd("/Users/emt380/Documents/PhD_Papers/Gender_bias/R_code/gender_bias_invited_commentary/github/shiny_app")
dim(outputs_select)
runApp()
runApp()
runApp()
runApp()
?downloadButton
runApp()
runApp()
runApp()
runApp()
